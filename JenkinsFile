pipeline {
    agent any

    environment {
    }

    stages {
        stage('Checkout') {
            steps {
                echo "📥 코드 가져오기"
                git branch: 'main', url: 'https://github.com/my-repo/book-rental-app.git'
            }
        }

        stage('Build') {
            steps {
                echo "⚙️ 빌드 시작"
                sh './gradlew clean build -x test'
            }
        }

        stage('Test') {
            steps {
                echo "🧪 테스트 실행"
                sh './gradlew test'
            }
            post {
                failure {
                    echo "🚨 테스트 실패 - 배포 중단!"
                    error("테스트 실패")
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                echo "🐳 Docker 이미지 빌드 및 푸시"
                sh "docker build -t ${REGISTRY}/${IMAGE_NAME}:latest ."
                sh "docker push ${REGISTRY}/${IMAGE_NAME}:latest"
            }
        }

        stage('Deploy') {
            steps {
                echo "🚀 애플리케이션 배포"
                sh '''
                docker-compose down
                docker-compose pull
                docker-compose up -d --build
                '''
            }
        }

        stage('Health Check') {
            steps {
                echo "🔍 헬스 체크 수행"
                script {
                    def response = sh(script: "curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/actuator/health", returnStdout: true).trim()
                    if (response != '200') {
                        error "🚨 배포 실패 - 서버 응답 오류!"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ 배포 완료!"
        }
        failure {
            echo "🚨 CI/CD 실패"
        }
    }
}